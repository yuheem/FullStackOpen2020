{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","filter","handleFilterChange","value","onChange","PersonForm","handleSubmit","name","handleNameChange","number","handleNumberChange","onSubmit","type","Person","person","handleDelete","onClick","Persons","persons","map","key","Notification","message","successful","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newMessage","setNewMessage","setSuccessful","useEffect","personService","initalPersons","personsToShow","toLowerCase","includes","event","target","preventDefault","reduce","acc","window","confirm","find","updatedPerson","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.298b0051.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios\n    .get(baseUrl)\n    .then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios\n    .post(baseUrl, newObject)\n    .then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then(response => response.data)\n}\n\nconst remove = id => {\n  return axios\n    .delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }\n\n","import React from 'react'\n\nconst Filter = ({ filter, handleFilterChange }) => (\n  <div>\n    Filter shown with\n    <input value={filter} onChange={handleFilterChange} />\n  </div>\n)\n\nexport default Filter\n","import React from 'react' \n\nconst PersonForm = ({ handleSubmit,\n                      name, \n                      handleNameChange,\n                      number, \n                      handleNumberChange }) => (\n  <form onSubmit={handleSubmit}>\n    <div>\n      Name:<input value={name} onChange={handleNameChange} />\n    </div>\n    <div>\n      Number:<input value={number} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type='submit'>add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({ person, handleDelete }) => (\n    <div>\n      {person.name} {person.number} {' '}\n      <button onClick={() => handleDelete(person.id, person.name)}>Delete</button>\n    </div>\n)\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, handleDelete }) => (\n    <div>\n      {persons.map(person =>\n      <Person \n        key={person.name} \n        person={person} \n        handleDelete={handleDelete} \n      />\n      )}\n    </div>\n)\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, successful}) => {\n  const style = {\n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n\n  if (message === '') {\n    return null\n  }\n\n  if (successful) {\n    style.color = 'green'\n  }\n\n  return (\n    <div style={style}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newMessage, setNewMessage ] = useState('')\n  const [ successful, setSuccessful ] = useState(false)\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initalPersons => {\n        setPersons(initalPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.reduce((acc, person) => \n      acc || person.name === newName, false)) {\n      const message =\n        `${newName} is already added to phonebook, \n        replace the old number with a new one?`\n\n      if (window.confirm(message)) {\n        const person = persons.find(person => person.name === newName)\n        const id = person.id\n        const updatedPerson = { ...person, number: newNumber }\n\n        personService\n          .update(id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => \n              person.id !== id ? person : returnedPerson))\n            setSuccessful(true)\n            setNewMessage(`Added ${person.name}`)\n            setTimeout(() => {\n              setNewMessage('')\n            }, 5000)\n          })\n          .catch(error => {\n            setNewMessage(\n              `Information of ${newName} has already been removed from server`\n            )\n            setTimeout(() => {\n              setNewMessage('')\n            }, 5000)\n          })\n      }\n\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      }\n\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setSuccessful(true)\n          setNewMessage(`Added ${newName}`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setNewMessage('')\n          }, 5000)\n        }) \n    }\n  }\n  \n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService\n        .remove(id)\n      setPersons(persons.filter(person => person.id !== id))\n    }\n  }\n    \n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n  \n  const personsToShow = newFilter \n    ? persons.filter(person => \n      person.name.toLowerCase().includes(newFilter.toLowerCase()))\n    : persons\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n        <Notification message={newMessage} successful={successful} />\n        <Filter filter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>Add a new entry</h2>\n        <PersonForm\n          handleSubmit={addPerson}\n          name={newName}\n          handleNameChange={handleNameChange}\n          number={newNumber}\n          handleNumberChange={handleNumberChange}\n        />\n      <h2>Numbers</h2>\n        <Persons persons={personsToShow} handleDelete={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}